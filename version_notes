
2.22 FILL-IN QUESTIONS-- STARTED 08/08/17
                    --PUSHED 08/13/17

    Goal of this update: Offer "Fill-in" questions as an option for teacher who are writing assessments
    Question table needs to be updated with the "style" attribute
        Validation must require "style" for every question
    Test for if a question is at first invalid, but then submitted successfully
    When user begins writing questions, they first choose label and type on one screen
        Editing prompt and answer choices will occur on the next screen.
        But answer choices won't be offered for "fill-in" questions. Instead, several blanks to enter all possible answers
        Saving these questions saves an array with many possible answers
    When comparing student answer to the correct answers, both sides is downcased and spaces are removed.
    Make sure that questions can be checked and graded correctly.
    Test changing label and extent
    While editing a question, don't allow editing the style
    Add Style for seed questions
        And seed a few fill-in questions
    Instead of splitting all the different form parts by @assignPermission, redirect the user to show or edit based on that variable.
        Update the tests for viewing another teacher's question.
    Test for editing fill-in questions
    The fixtures probably don't need to load associations in the test helper anymore




2.21 PRE-TEST QUIZ UNLOCKS--STARTED 08/05/17
                            -- PUSHED 08/08/17
    Goal of this update: Many quizzes can be set as pre-tests so that they are open to every student upon joining that class.
        
    This attribute is edited between the first seminar editing screen and the priorities. It only lists the objectives that are already in that class. 
        Teacher can check which objectives should be considered as pre-test objectives. Doing this adjusts a column in the objective_seminar model.
    ObjectiveSeminar model needs column for pre-test
        I'm coding that as an integer, not a boolean. That way, in the future, I might be able to set some pre-tests to open during 2nd or 3rd term
            instead of opening them all at the beginning.
    Create the view with the checklists
        Ensure that checks are working to adjust the pre-test attribute
        Ensure that routing to the next screen is still functioning.
    Test pretests and priorities for a new seminar
    Test a view that includes desk consultants objectives and pretest objectives both
    When new students join the class, the pre-tests are open to them.
        Lowest-level quizzes are offered immediately. Higher-level quizzes are offered if the student is ready for them.
        Test in seminar model should also check that unwanted assignments don't appear in pretest offerings
    Objectives where student has scored 100 removed from pretest offerings
    Objectives that student has attempted twice removed from pretest offerings
    Guard if a team has no objective so that student does not get an error in the view.
    Make sure to downcase usernames or it creates a problem with finding them
    Try to Eager load in a few spots
    has_not_scored_100 needs to apply to consultant objectives as well as pretest objectives
    Put the checkbox updating into on transaction so that servers, etc. never see the intermediate state.
    Clean up the routes file now that I know about :collection and :member

2.20 SINGLE-TABLE INHERITANCE--STARTED 07/30/17
                             --PUSHED 08/05/17
    One table for User
        Sub-table for teacher
        Sub-table for admin
        Sub-table for student
    Update the seeds
    Change "student_number" to "user_number" so that teachers can have Id numbers
        Search for all instances of student_number
    Look for all uses of the word "role"
    All of the calls to  'shared/teacher_name_and_edit' need input for the user: variable
    Capybara tests to replace all user tests that became teacher tests.
    Look for all instances of user_path or users_path
    Student test for when password is present
    Don't allow a student and a teacher with the same e-mail
    The total_points function in the Student model was made more efficient
    correct_user functions moved to the application controller
        Changed name to correct_owner
    Some calls to user_is_an_admin need to be redirect_for_non_admin
    Added tests for editing students.
    Dried up instances of current_user && current_user.type
    The require "rubygems" line was no longer necessary, but keep it in mind in case of UI failure
    "Users" controller and views are no longer be necessary
    Mr. Z School Logo


2.19  REMAKE APP IN NEW WORKSPACE--STARTED 07/18/2017
                           PUSHED 07/30/2017
    Start a new workspace that doesn't use the tutorial configuration
    Destroying user's seminars and objectives needs to move from the controller to the model.
    Look at the edit action for the users controller. It looks like it's set up to work
    for students, not teachers.
    Put teacher titles into the DB seeds
    And Questions



****  THIS POINT MARKS THE BEGINNING OF THE VERSION NOTES. BEFORE THIS, I WAS
LISTING NOTES IN ASCENDING CHRONOLOGICAL ORDER.



VERSION 2.11 ADD QUESTIONS TO DB
    Migrate after deploy
        There might be an issue with the migration that added created_by to objectives
        Roll back to this migration. Then erase all old objectives.
        Need to eliminate the reference to "0" as a question/objective creator.
        
VERSION 2.12 UPDATED TESTS AFTER QUESTIONS
    Placement of created date in questions index
    Admin shows "Admin Page" and "Back to your Profile"
        Get rid of "Admin" link.
        Creating a question seems to be missing the "Back to your profile" link
    Test for message for teachers who haven't made any private objectives
    Make sure that when a user is deleted, to also delete that user's objectives.
        Otherwise those objectives will return an error.
        
VERSION 2.13 ASSIGN LABELS TO QUESTIONS
    User can create labels
        And edit
        And index
    Question form gives list of choices for labels
        "No label yet" option is the default checked radio button
        Write a test for that
    Default label is "Unlabeled"
    Label form lists questions that don't yet have a label
    Edit permission message should only appear once in the form, instead of appearing on every attribute.
    Question index allows showing questions by label
       Remember which labels are checked after form is submitted.
    Icon for label
    I suspect the live site might have issues with assigning a question with a label_id 0
        But if not, then leave that part alone.
        
        
VERSION 2.14 LABELJOINS (Later renamed to Objective_Seminars)
    Flaw from previous update where questions index wasn't showing labels to choose from.
    Next, make it so that checking a label creates a labeljoin
    Partial needs to include the permission aspect
    Test that mainassigns do not appear as a choice for a possible preassign
    Editor can edit how many questions from each label appear on the quiz for that objective.
    Editing Objectives goes to a radio button list of available labels so teacher can which label a question fits
        Then another screen where the teacher can choose how many questions from each label
        and the point value of each question from that label
    Total Point Calculator that updates as the values are changed.
    Test for editing labeljoins
        Test for Deleting a labeljoin
    Create a New Objective should read "Private Objective" instead of "Public Objective"
    "objective Created" should read, "Objective Created"
    Creating an objective needs to re-route to quantities, just like editing an objective does.
    
UPDATE 2.15 CREATE QUIZ PUSHED 07/11/17
    When student clicks on the objective, a new quiz instance is created.
    Ripostes (Quiz_question joins) are created for each question associated with that quiz 
    Ruby chooses random questions to put on the quiz
    Add an attribute to riposte to keep track of that riposte's order in the quiz.
    instead of using twenty different answer choices saved and
        twenty different responses, the controller should save an array of correct
        responses. (The array is for future questions where multiple correct
        answers are possible.)
    Now there's a new function to create scores for each student.
        That should be moved from quiz_test into test_helper
        And setup in all models that need it.
    Show total score at top and bottom of quiz report.
    I think that life will be easier and more readable if I give each riposte a
        column to show its points possible.
    Save the whole answer in reponse column of riposte, not just "true" or "false"
    Student sees first question, responds, and submits
        Response is saved in riposte (quiz_question join)
    Student sees second question, etc.
        etc.
    Total score for quiz is calculated
    If student has improved, score for that objective is updated
    Will need to rollback migration after deploy to change the type of the response columns
    
    
    
    
2.16 CONSULTANCIES -- STARTED 07/11/17
                      PUSHED 07/15/17
    Quiz Answer Choice order is randomized
    .pluralize display for the word stars in Quiz report
    Button to go back to class (or at least profile) after taking quiz.
        Add current_class to student modeL
    Consultancy model
        Seminar
        Date
        Has many Teams
    Team model
        Has one topic
        Has one leader
        Has many members
        Type (normal, unplaced, absent)
    Can get rid of studentHash[:placed] 
    Consultancy is created and detailed when teacher chooses "DeskConsulants"
    Desk Consultants view should be changed to be based on @consultancy
        Now see if the view works
    When teacher views class, she can view all the consultancies for that class
    Migrate to add current_class to student
    
2.17 LOCKED QUIZZES -- STARTED 07/15/17
                        PUSHED 07/18/17
    Rename Score to objectiveStudent to follow convention
        Model has "unlocked" attribute
    Rename StudentsTeam to StudentTeam (singular)
    When a consultancy is created, Quiz is unlocked for to all students
        who have that topic
    Students can only see unlocked objectiveS
    Try to implement eager loading where applicable
    Erase oldest consultancy when a class has more than 9
    Erase first consultancy in a day if a second is created.
    
2.18 MULTIPLE QUESTIONS -- STARTED 07/18/2017
                          PUSHED 07/20/2017
    When clicking on "Create a new question," it brings up a form with only one
        spot to choose "public" or "private" and one spot to choose labels. But
        five spots for prompt and answer choice.
    Test for multiple questions
    Header in "Create new Students" view
    Buttons for label and extent aren't showing properly.
    Don't create 5 questions if no prompt is entered for the last few.
    Default checked label