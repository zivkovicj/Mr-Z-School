exit
ObjectiveStudent.find_by(:user => @student, :objective => @obj_5)
@objective_5
ObjectiveStudent.find_by(:user => @student, :objective => @objective_5)
os = ObjectiveStudent.find_by(:user => @student, :objective => @objective_5)
@obj_5 = @objective_10.preassigns.first
@objective_10.preassigns.first
os = ObjectiveStudent.find_by(:user => @student, :objective => @objective_10)
@student
@student_2
@objective_10 = Objective.find(100751426)
@objective_10 = Objective.find(426)
@objective_10
@pretest_objectives
c
@pretest_objectives
c
@pretest_objectives
exit
@objective_10
@objective_20.preassigns
c
@test_os.objective = @objective_20.preassigns.first
@test_os.objective
@objective_20.preassigns
@objective_20
c
@pretest_objectives
c
@pretest_objectives
exit
main_assign_os
exit
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).count
seminar.students.count
new_needed_count
c
self
c
self
exit
this_obj
exit
@student_2
exit
@seminar.students.count
@seminar
exit
this_obj_sem
old_studs_need_count
exit
self
new_needed_count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where("points_all_time < ? OR points_all_time IS NULL", 9).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where("points_all_time < ? OR points_all_time IS NULL", 9)
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true)
seminar
c
seminar
c
seminar
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true)
new_needed_count
exit
ObjectiveStudent.find_by(:objective => obj, :user => stud)
stud = sem_2.students[0]
obj = sem_2.objectives[0]
exit
ObjectiveStudent.find_by(:user => stud, :objective => obj)
stud = sem_2.students[0]
obj = sem_2.objectives[0]
obj = sem_2.objectives[1]
obj = sem_2.objectives[0]
sem_2.objectives.count
sem_2.students.count
exit
sem_2.students.count
this_obj_sem
new_seminar_objective
exit
ObjectiveStudent.find_by(:user => stud, :objective => obj)
obj = Objective.find_by(:name => "volume of cones")
stud = Student.find_by(:first_name => "Phil")
c
first_obj
c
@seminar.students.count
c
obj_sem
obj_sem.students_needed_refresh
obj_sem
c
obj_sem
c
obj_sem
c
obj_sem
c
obj_sem
c
obj_sem
c
obj_sem
obj_sem.students_needed_refresh
obj_sem
obj_sem.objective
ObjectiveSeminar.where(:seminar => @seminar).count
c
ObjectiveSeminar.find_by(:objective => objective, :seminar => sem)
c
ObjectiveSeminar.find_by(:objective => objective, :seminar => sem)
exit
this_os = ObjectiveSeminar.find_by(:objective => objective, :seminar => sem)
ObjectiveSeminar.find_by(:objective => objective, :seminar => sem)
sem = these_classes.first
these_classes.count
these_classes
c
new_score_all_time
old_score_all_time
c
old_score_all_time
c
old_score_all_time
exit
 @objective_30.objective_seminars.find_by(:seminar => @seminar)
exit
ObjectiveStudent.where(:user => first_class_to_add.students, :objective => @own_assign, :ready => true).where("points_all_time < ?", 9).count
ObjectiveStudent.where(:user => first_class_to_add.students, :objective => @own_assign, :ready => true).count
ObjectiveStudent.where(:user => first_class_to_add.students, :objective => @own_assign).count
ObjectiveStudent.where(:user => first_class_to_add.students).count
@own_assign.objective_seminars.find_by(:seminar => first_class_to_add)
exit
ObjectiveStudent.where(:objective => first_obj, :points_all_time => 0, :user => @seminar.students).count
ObjectiveStudent.where(:objective => first_obj, :points_all_time => 0, :user => seminar.students).count
ObjectiveStudent.where(:objective => first_obj, :points_all_time => 0).count
ObjectiveStudent.where(:points_all_time => 0).count
ObjectiveStudent.where(:points_all_time => 0).include?(obj_stud_1)
ObjectiveStudent.where(:points_all_time => 0).count
obj_stud_1
exit
ObjectiveStudent.where(:objective => first_obj, :ready => true).where.not(:points_all_time => 9).count
ObjectiveStudent.where(:objective => first_obj, :ready => true).where(:points_all_time => 9).count
ObjectiveStudent.where(:objective => first_obj, :ready => true).where(:points_all_time => 0).count
ObjectiveStudent.where(:user => @seminar.students, :objective => first_obj, :ready => true).where(:points_all_time => 0).count
    ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where(:points_all_time => 0).count
exit
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where(:points_all_time => 0).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where(:points_all_time => 9).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where("points_all_time < ?", 9).count
exit
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where("points_all_time < ?", 9).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective).count
ObjectiveStudent.where(:user => seminar.students).count
new_needed_count
exit
origin
c
origin
c
origin
this_score
self
exit
@test_obj_stud.reload
@test_obj_stud
Quiz.last
exit
self.objective.quizzes.order(:created_at).last
self.objective.quizzes.count
self.objective.quizzes
self
c
exit
origin
self
exit
self
stud = @student_1
c
self
exit
os1 = ObjectiveStudent.find_by(:user => stud, :objective => pre_assign_1)
stud = @student_1
c
puts page.body
exit
@objective_30.preassigns.count
exit
@student_1.learn_options(@seminar).count
@student_1.objective_students.where(:ready => false).last.set_ready
@student_1.objective_students.where(:ready => false).count
@student_1.objective_students.where(:ready => true).count
@student_1.objective_students.count
c
@student_1.learn_options(@seminar).count
@student_1.learn_options.count
@student_1.objective_students.where(:ready => true).count
@student_1.objective_students.where(:ready => false).count
@student_1.objective_students.count
c
@student_1.objective_students.where(:ready => false).count
@student_1.objective_students.where(:ready => true).count
@student_1.objective_students.where(:ready => true)
c
@student_1.objective_students.count
@student_1.objective_students.where(:ready => false).count
@student_1.objective_students.where(:ready => false)
@student_1.objective_students.where(:ready => true)
exit
objective_students.where(:objective => seminar.objectives).select{|x| x.total_keys == 0 && x.obj_ready_and_willing?(c_thresh)}
objective_students.where(:objective => seminar.objectives).count
objective_students.where(:objective => seminar.objectives)
objective_students.count
self
exit
@student_1.learn_options(@seminar)
exit
@pretest_objectives
c
puts page.body
exit
@labels
c
@labels
c
@labels
list_for_checks
c
list_for_checks.where.not(:user => current_user)
list_for_checks.where(:user => current_user)
list_for_checks
c
@labels
c
exit
@student_4
exit
@already_preassign_to_main
@preassign_to_add
@sub_preassign
@already_preassign_to_super
exit
user.objective_students.where(:objective => objective.preassigns)[0].objective.name
user.objective_students.where(:objective => objective.preassigns)[0].name
user.objective_students.where(:objective => objective.preassigns)[0]
user.objective_students.where(:objective => objective.preassigns)
objective.preassigns.count
self
c
objective
objective.preassigns.count
self
exit
os_4.user.first_name
