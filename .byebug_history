exit
ObjectiveStudent.where(:user => first_class_to_add.students, :objective => @own_assign, :ready => true).where("points_all_time < ?", 9).count
ObjectiveStudent.where(:user => first_class_to_add.students, :objective => @own_assign, :ready => true).count
ObjectiveStudent.where(:user => first_class_to_add.students, :objective => @own_assign).count
ObjectiveStudent.where(:user => first_class_to_add.students).count
@own_assign.objective_seminars.find_by(:seminar => first_class_to_add)
exit
ObjectiveStudent.where(:objective => first_obj, :points_all_time => 0, :user => @seminar.students).count
ObjectiveStudent.where(:objective => first_obj, :points_all_time => 0, :user => seminar.students).count
ObjectiveStudent.where(:objective => first_obj, :points_all_time => 0).count
ObjectiveStudent.where(:points_all_time => 0).count
ObjectiveStudent.where(:points_all_time => 0).include?(obj_stud_1)
ObjectiveStudent.where(:points_all_time => 0).count
obj_stud_1
exit
ObjectiveStudent.where(:objective => first_obj, :ready => true).where.not(:points_all_time => 9).count
ObjectiveStudent.where(:objective => first_obj, :ready => true).where(:points_all_time => 9).count
ObjectiveStudent.where(:objective => first_obj, :ready => true).where(:points_all_time => 0).count
ObjectiveStudent.where(:user => @seminar.students, :objective => first_obj, :ready => true).where(:points_all_time => 0).count
    ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where(:points_all_time => 0).count
exit
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where(:points_all_time => 0).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where(:points_all_time => 9).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where("points_all_time < ?", 9).count
exit
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where("points_all_time < ?", 9).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective).count
ObjectiveStudent.where(:user => seminar.students).count
new_needed_count
exit
origin
c
origin
c
origin
this_score
self
exit
@test_obj_stud.reload
@test_obj_stud
Quiz.last
exit
self.objective.quizzes.order(:created_at).last
self.objective.quizzes.count
self.objective.quizzes
self
c
exit
origin
self
exit
self
stud = @student_1
c
self
exit
os1 = ObjectiveStudent.find_by(:user => stud, :objective => pre_assign_1)
stud = @student_1
c
puts page.body
exit
@objective_30.preassigns.count
exit
@student_1.learn_options(@seminar).count
@student_1.objective_students.where(:ready => false).last.set_ready
@student_1.objective_students.where(:ready => false).count
@student_1.objective_students.where(:ready => true).count
@student_1.objective_students.count
c
@student_1.learn_options(@seminar).count
@student_1.learn_options.count
@student_1.objective_students.where(:ready => true).count
@student_1.objective_students.where(:ready => false).count
@student_1.objective_students.count
c
@student_1.objective_students.where(:ready => false).count
@student_1.objective_students.where(:ready => true).count
@student_1.objective_students.where(:ready => true)
c
@student_1.objective_students.count
@student_1.objective_students.where(:ready => false).count
@student_1.objective_students.where(:ready => false)
@student_1.objective_students.where(:ready => true)
exit
objective_students.where(:objective => seminar.objectives).select{|x| x.total_keys == 0 && x.obj_ready_and_willing?(c_thresh)}
objective_students.where(:objective => seminar.objectives).count
objective_students.where(:objective => seminar.objectives)
objective_students.count
self
exit
@student_1.learn_options(@seminar)
exit
@pretest_objectives
c
puts page.body
exit
@labels
c
@labels
c
@labels
list_for_checks
c
list_for_checks.where.not(:user => current_user)
list_for_checks.where(:user => current_user)
list_for_checks
c
@labels
c
exit
@student_4
exit
@already_preassign_to_main
@preassign_to_add
@sub_preassign
@already_preassign_to_super
exit
user.objective_students.where(:objective => objective.preassigns)[0].objective.name
user.objective_students.where(:objective => objective.preassigns)[0].name
user.objective_students.where(:objective => objective.preassigns)[0]
user.objective_students.where(:objective => objective.preassigns)
objective.preassigns.count
self
c
objective
objective.preassigns.count
self
exit
os_4.user.first_name
os_4.user.name
c
@already_preassign_to_super
@main_objective
@super_objective
c
objective.preassigns.each do |preassign| puts preassign.name end
user.objective_students.where(:objective => objective.preassigns).each do |os| puts "#{os.objective.name} #{os.points_all_time}" end
user.objective_students.where(:objective => objective.preassigns).each do |os| puts "#{os.name} #{os.points_all_time}" end
user.objective_students.where(:objective => objective.preassigns).each do |os|
user.objective_students.where(:objective => objective.preassigns)
objective.preassigns.count
objective.preassigns.all? {|preassign| ObjectiveStudent.find_by(:user => user, :objective => preassign)&.points_all_time.to_i >= 6 }
self
c
exit
self
objective.preassigns.all? {|preassign| ObjectiveStudent.find_by(:user => user, :objective => preassign)&.points_all_time.to_i >= 6 }
user
objective.preassigns.count
exit
@student_2
@objective.preassigns.count
@objective
c
exit
@main_objective
exit
@main_objective.preassigns.count
exit
preassign = obj.preassigns.first
preassign = obj.preassign.first
obj.preassigns.all? {|preassign| ObjectiveStudent.find_by(:user => user, :objective => preassign)&.points_all_time.to_i >= 6 }
obj.preassigns
obj = self.objective
exit
mainassign_os
mainassign_os.set_ready
mainassign_os = ObjectiveStudent.find_or_create_by(:user => user, :objective => mainassign)
mainassign.preassigns.count
exit
@teacher_granted_quizzes.count
@seminar
@student
exit
eixt
exi
current_user
@student_2.objective_students.find_by(:objective => @objective_10)
@student_2
@seminar.objectives.include?(@objective_10)
@seminar
exit
puts page.body
exit
c
new_score
c
new_score
exit
new_score
c
new_score
exit
new_score.reload
new_score.realod
new_score.set_ready
new_score.ready
self.ready
ready
ObjectiveStudent.find_by(:user => user, :objective => obj.preassigns.first)
ObjectiveStudent.find_by(:user => user, :objective => objective.preassigns.first)
user
obj.preassigns.count
obj
exit
obj
exit
obj.preassigns.count
obj = self.objective
self.objective
exit
self.user
c
exit
stud_to_add
exit
eixt
self.user.first_name
self.user.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
self.objective.name
c
Objective.count
