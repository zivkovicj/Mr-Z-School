c
params
@objective.preassign_ids
c
exit
obj_stud = ObjectiveStudent.find_by(:user => kaylee, :objective => pre)
pre = obj.preassigns[3]
obj_stud = ObjectiveStudent.find_by(:user => kaylee, :objective => pre)
pre = obj.preassigns[2]
obj_stud = ObjectiveStudent.find_by(:user => kaylee, :objective => pre)
pre = obj.preassigns[1]
obj_stud = ObjectiveStudent.find_by(:user => kaylee, :objective => pre)
pre = obj.preassigns[0]
obj.preassigns.each do |preassign| puts ObjectiveStudent.find_by(:user => kaylee, :objective => preassign).ready end
obj.preassigns.each do |preassign| obj_stud = ObjectiveStudent.find_by(:user => kaylee, :objective => preassign) puts obj_stud.ready end
obj.preassigns.each do |preassign|
obj.preassigns[0]
os_3
os_3.set_ready
os_3
kaylee = os_3.user
os_3.user
obj.preassigns.count
obj.reload
obj = @main_objective
@main_objective
os_3.objective
os_3
exit
@objective.preassigns.count
@objective.reload
@objective.update_attributes(:preassign_ids => params[:objective][:preassign_ids])
@objective.update_attributes(params[:objective][:preassign_ids])
params[:objective][:preassign_ids]
@objective.preassigns.count
@objective.reload
@objective.update_attributes(params_to_use)
params_to_use
@objective.preassigns.count
c
@objective.preassigns.count
@objective.reload
@objective.update(:preassign_ids => [])
params[:objective][:preassign_ids]
c
params
c
exit
params[:objective][:preassign_ids]
params
exit
@objective.preassigns.count
@objective.reload
@objective.update_attributes(params_to_use)
@objective.preassigns.count
params
c
params
c
params
c
@objective.preassigns.count
params
c
exit
@objective.preassigns.count
@objective.reload
@objective.update_attributes(params_to_use)
@objective.preassigns.count
@objective
params
params_to_use
c
params[:objective][:which_params].to_sym == "name"
params [:objective][:which_params].to_sym == "name"
params [:objective][:which_params] == "name"
params [:objective][:which_params].to_s == "seminars"
params [:objective][:which_params] == "seminars"
params[:objective][:which_params]
c
params
exit
params
c
params
exit
c
obj_sem
obj_sem.students_needed_refresh
obj_sem = ObjectiveSeminar.first
ObjectiveSeminar.where(:students_needed => nil).count
ObjectiveSeminar.count
c
@picture.valid?
c
@picture.errors
@picture.valid?
c
@picture.errors
@picture.valid?
@picture
exit
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
exit
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
c
@student_2.quizzes.where(:objective => @objective_10).count
exit
@student_2.quizzes.where(:objective => @objective_10).count
c
@o_s
c
@o_s
c
@o_s
c
@o_s
c
this_obj_stud
c
old_sem.students.count
c
old_sem.students.count
old_sem = @old_ss.seminar
@old_ss = SeminarStudent.find(old_ss_id)
exit
ObjectiveStudent.find_by(:user => @student, :objective => @obj_5)
@objective_5
ObjectiveStudent.find_by(:user => @student, :objective => @objective_5)
os = ObjectiveStudent.find_by(:user => @student, :objective => @objective_5)
@obj_5 = @objective_10.preassigns.first
@objective_10.preassigns.first
os = ObjectiveStudent.find_by(:user => @student, :objective => @objective_10)
@student
@student_2
@objective_10 = Objective.find(100751426)
@objective_10 = Objective.find(426)
@objective_10
@pretest_objectives
c
@pretest_objectives
c
@pretest_objectives
exit
@objective_10
@objective_20.preassigns
c
@test_os.objective = @objective_20.preassigns.first
@test_os.objective
@objective_20.preassigns
@objective_20
c
@pretest_objectives
c
@pretest_objectives
exit
main_assign_os
exit
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).count
seminar.students.count
new_needed_count
c
self
c
self
exit
this_obj
exit
@student_2
exit
@seminar.students.count
@seminar
exit
this_obj_sem
old_studs_need_count
exit
self
new_needed_count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where("points_all_time < ? OR points_all_time IS NULL", 9).count
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true).where("points_all_time < ? OR points_all_time IS NULL", 9)
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true)
seminar
c
seminar
c
seminar
ObjectiveStudent.where(:user => seminar.students, :objective => objective, :ready => true)
new_needed_count
exit
ObjectiveStudent.find_by(:objective => obj, :user => stud)
stud = sem_2.students[0]
obj = sem_2.objectives[0]
exit
ObjectiveStudent.find_by(:user => stud, :objective => obj)
stud = sem_2.students[0]
obj = sem_2.objectives[0]
obj = sem_2.objectives[1]
obj = sem_2.objectives[0]
sem_2.objectives.count
sem_2.students.count
exit
sem_2.students.count
this_obj_sem
new_seminar_objective
exit
ObjectiveStudent.find_by(:user => stud, :objective => obj)
obj = Objective.find_by(:name => "volume of cones")
stud = Student.find_by(:first_name => "Phil")
c
first_obj
c
@seminar.students.count
c
obj_sem
obj_sem.students_needed_refresh
obj_sem
c
obj_sem
c
obj_sem
c
obj_sem
c
obj_sem
c
obj_sem
c
obj_sem
obj_sem.students_needed_refresh
obj_sem
