c
@gs.reload
c
@gs
@student_2.goal_students[8]
@student_2.goal_students[7]
@student_2.goal_students[6]
@student_2.goal_students[5]
@student_2.goal_students[4]
@student_2.goal_students[3]
@student_2.goal_students[2]
@student_2.goal_students[1]
@student_2.goal_students[0]
@student_2.goal_students.count
@student_2.goal_students
@student_2
c
@test_os.reload
@test_os
c
@test_os.reload
@test_os
c
@test_os.reload
@test_os
c
@test_os
c
@test_os
c
@this_os
c
@this_os
c
@this_os
c
@this_os
c
@this_os
exit
c
@this_os
c
@this_os
c
@this_os
c
@this_os
c
@this_os
c
@this_os
exit
c
@student_2.quizzes.where(:objective => @objective_10).count
@test_os
c
@student_2.quizzes.where(:objective => @objective_10).count
@test_os
c
@student_2.quizzes.where(:objective => @objective_10).count
@test_os
c
@test_os
c
@student_2.quizzes.where(:objective => @objective_10).count
@test_os
c
@test_os
@student_2.quizzes.where(:objective => @objective_10).count
c
exit
c
@test_os
exit
@test_os
@test_os.update_keys("teacher_granted", 2)
@test_os
@test_os.update(:teacher_granted_keys => 5)
@test_os
@test_os.update(:teacher_granted_keys => 6)
@test_os
exit
seminar.objectives.select{|x| x.objective_students.find_by(:user => self).read_attribute(:"#{which_key}_keys") > 0}
which_key
c
which_key
c
which_key
exit
self.objective_students[7]
self.objective_students[6]
self.objective_students[5]
self.objective_students[4]
self.objective_students[3]
self.objective_students[2]
self.objective_students[1]
self.objective_students[0]
@test_os
self.objective_students.
seminar.objectives.select{|x| x.objective_students.find_by(:user => self).read_attribute(:"#{which_key}_keys") > 0}
which_key
c
which_key
c
which_key
seminar.objectives
seminar.objectives.select{|x| x.objective_students.find_by(:user => self).read_attribute(:"#{which_key}_keys") > 0}
@objective_10
self.objective_students.count
self
exit
@teacher_granted_quizzes
@show_quizzes
c
puts page.body
@test_os
exit
Objective.all[7]
Objective.all[6]
Objective.all[5]
Objective.all[4]
Objective.all[3]
Objective.all[2]
Objective.all[1]
Objective.count
exit
users(:archer)
User.count
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
exit
User.count
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
users(:student_1)
c
@student_1
@student_1 = users(:student_1)
users(:student_1)
User.count
c
self
self.update(:"#{which_key}_keys" => current_keys)
which_key
self
current_keys
self.user
c
self.user
self
c
@objective.objective_students.find_by(:user => student)
@objective.objective_students.find_by(:user => student).update_keys("teacher_granted", 1)
@objective.objective_students.find_by(:user => student)
c
@objective.objective_students.find_by(:user => student)
params
c
student
c
student
exit
@objective_20
@seminar.objectives.include?(@objective_20)
@seminar
@objective_20.id
puts page.body
c
@this_obj_stud
c
@this_obj_stud
exit
@student_2.objective_students.find_by(:objective => @os_0.objective)
@student_2.objectives.count
@student_2.objectives
@seminar.objectives.include?(@os_0.objective)
@os_0.objective
@student_2
xtexitt
c
exit
student
exit
@seminar.students.find_by(:last_name => "garcia")
@seminar.students.count
c
@o_s
c
student
exit
c
current_keys
c
current_keys
c
current_keys
c
current_keys
c
current_keys
c
current_keys
c
current_keys
c
current_keys
c
current_keys
c
current_keys
c
current_keys
exit
@student_2.quizzes.last
@student_2.quizzes.first
@student_2.quizzes.count
