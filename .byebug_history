c
exit
eixt
c
exit
c
exit
c
exit
c
exit
c
exit
lo = @objective.label_objectives.first
@objective.label_objectives.count
@objective.label_objectives
@objective
exit
c
@student_2.quizzes.count
exit
@student_2.objective_students.find_by(:objective => @objective_80)
@student_2.has_not_scored_100(@objective_80)
exit
@student_1.check_if_ready(@ownAssign)
@student_1.checkIfReady(@ownAssign)
@student_1.objective_students.find_by(:objective => @ownAssign)
@student_1.objective_students.find_by(@ownAssign)
@seminar.all_pretest_objectives(@student_1).count
exit
@seminar.objective_is_pretest(@objective_40)
@seminar.objectives[2]
@seminar.objective_seminars.find_by(:objective => @objective_30)
exit
@seminar.objective_is_pretest(@alreadyPreassignedToMainMain)
os
os.update(:pretest => 1)
os = @seminar.objective_seminars.find_by(:objective => @alreadyPreassignedToMainMain)
@seminar.objective_seminars.find_by(:objective => @alreadyPreassignedToMainMain)
exit
self.objective_seminars.find_by(:objective => obj)
obj
c
@alreadyPreassignedToMainMain
exit
@student
c
@student_1
@student
exit
obj
self
exit
objective_is_pretest(obj)
obj = self.objectives[5]
objective_is_pretest(obj)
obj = self.objectives[4]
objective_is_pretest(obj)
obj = self.objectives[3]
objective_is_pretest(obj)
obj = self.objectives[2]
objective_is_pretest(obj)
obj = self.objectives[1]
objective_is_pretest(obj)
obj = self.objectives[0]
self.objectives.count
self.objectives
c
@pretest_objectives
exit
@pretest_objectives
@pretest_objectives.count
@pretest_objectives
c
exit
User.find_by(username: "ab14")
User.find_by(username: params[:session][:email].downcase)
User.find_by(email: params[:session][:email].downcase)
params[:session][:email].downcase
c
exit
user
exit
params
exit
@new_seminar
obj
exit
obj.objective_seminars
obj = Objective.first
c
params
exit
os
os.update(:pretest => 1)
os = ObjectiveSeminar.first
ObjectiveSeminar.first
c
ObjectiveSeminar.where(:id => params[:pretest_on]).update_all(:pretest => 1)
ObjectiveSeminar.first
c
ObjectiveSeminar.where(:id => params[:pretest]).count
ObjectiveSeminar.where(:id => params[:pretest])
ObjectiveSeminar.first
c
ObjectiveSeminar.first
c
params
c
params
c
params
exit
params
exit
params[:pretest]
params
exit
params
exit
params
exit
params
c
puts page.body
c
exit
os
c
puts page.body
c
current_user.current_class
c
current_user.current_class
current_user
c
current_user
exit
puts page.body
current_user
c
current_user
exit
puts page.body
exit
current_user
exit
current_user
exit
current_user
c
current_user.students.include?(@student)
exit
@student
exit
@teacher_1
current_user.students.count
current_user
current_user.students.include?(@student)
exit
current_user.students.include?(@student)
@student == current_user
current_user
@student
exit
c
exit
@student
params
c
exit
puts page.body
c
@seminar
exit
@seminar
exit
@seminar
exit
c
@student.user_number
@student
exit
@student
exit
t1.objective
t1 = @student_2.teams.first
@student_2.teams.count
@student_2.teams
@student_2
c
c1.teams.count
c1 = Consultancy.last
Team.first
exit
t1.students
t1
stud2.teams
stud2 = users(:student_2)
obj = t1.objective
c1.teams.count
c1
t1.valid?
t1
exit
c1.teams.count
t1.valid?
t1 = c1.teams.create(:objective => objectives(:objective_10), :consultant => users(:student_2))
c1.teams.count
c1 = Consultancy.first
exit
t1.teams.count
t1 = c1.teams.first
c1 = Consultancy.first
Consultancy.first
@objective
exit
@student_2
@student_1
c
admin_user
@object.user == current_user
current_user
@object.user
c
@current_user
exit
c
@current_user
exit
current_user
@object.user
@object
exit
@seminar.user
@seminar
c
which_model.find(params[:id])
params
which_model
exit
value.find(params[:id])
value
exit
params
exit
value
c
@student.valid?
c
exit
student["password"]
@student
c
puts page.body
exit
