c
consult_list_still_needed.select{|x| x.score_on(obj) >= @cThresh}
consult_list_still_needed.select{|x| x.score_on(obj) >= @cThresh && x.student_has_keys(obj) == 0}
consult_list_still_needed.count
consult_list_still_needed
c
@student_80
exit
new_teacher
c
params
exit
@gs.seminar.checkpoint_due_dates
Date.today
this_due_date
c
puts page.body
c
Date.today
this_due_date
c
object
exit
c
this_os.current_scores[@term]
@term
c
params
c
params
c
params
c
@students
first_layer
params[:search].present?
params[:search].present/
params
c
@students
params
c
@students
params[:whichParam]
Student.where(:user_number => 1)
Student.search(params[:search], params[:whichParam]).count
Student.search(params[:search], params[:whichParam])
params[:search]
current_user.type
first_layer.count
@students.count
@students
Student.find_by(:user_number => 1)
Student.find(1)
params
c
params
exit
params
first_layer
@students
c
params
first_layer
current_user
@students
exit
@students
c
@students
first_layer.where(:verified => 1, :school => current_user.school)
first_layer.where(:verified => 1)
first_layer
current_user
current_user.verified
c
current_user.verified
current_user
exit
current_user.verified
first_layer
second_layer
params
@students
c
exit
@school.term_dates
@school
c
puts page.body
c
exit
@school.term
@school.term_dates
@school.termdates
c
@school
exit
@school
c
@school_1.reload
@school_1
@school
exit
@school
c
exit
@school
c
Date.today > current_term_ending_date.to_date
current_term_ending_date
Date.today
c
current_term_ending_date
c
School.term_defaults
exit
@school.term_defaults
@school
exit
@school
c
@school
exit
@school.mentor
current_user
@school
c
@test_obj_stud.reload
@test_obj_stud
exit
@test_obj_stud.valid?
@test_obj_stud.reload
@test_obj_stud
exit
obj.objective_students
obj = Objective.find_by(:name => "percentages")
stud.objective_students
stud = Student.find_by(:last_name => "Vasquez")
ObjectiveStudent.all
exit
@test_obj_stud.reload
@test_obj_stud
exit
@scores
exit
@test_obj_stud.reload
@test_obj_stud
c
exit
obj.objective_students
obj = pre_objectives[3]
@objectives
c
@test_obj_stud.user
@test_obj_stud
exit
obj.objective_students.first.user
obj.objective_students
obj = pre_objectives[3]
exit
obj.objective_students.where(:user => @seminar.students).count
obj.objective_students.count
obj.objective_students
obj = pre_objectives[3]
obj = pre_objectives[2]
obj = pre_objectives[1]
obj = pre_objectives[0]
@term
pre_objectives
@objectives
exit
c
@objectives
c
@objectives
c
@objectives
c
puts page.body
exit
@objectives
c
current_term
exit
@teacher.school
@teacher
current_term
exit
params
@term
c
exit
c
exit
c
exit
term
exit
@show_all
