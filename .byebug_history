exit
@ss_3
c
@ss_3
exit
@ss_3
puts page.body
c
@ss_3
puts page.body
c
exit
@student_5
@rank_by_consulting[0]
exit
@rank_by_consulting[0]
exit
stud.consultant_days(@seminar)
stud.consultant_days
stud = @setup_rank_by_consulting[0]
@setup_rank_by_consulting[0].consultant_days
@student_1
@setup_rank_by_consulting[0]
@setup_rank_by_consulting
exit
(Date.today - @team.created_at.to_date).to_i
Date.today - @team.created_at.to_date
@team.created_at.to_date
Date.current == Date.today
Date.current
@team.updated_at.time_ago
@team.updated_at.days_ago
@team.updated_at.to_s
Date.today - @team.updated_at
Date.today
time_ago_in_words(@team.updated_at)
@team.updated_at
@team
days_ago_in_words(@team.updated_at)
@team.updated_at.days_ago_in_words
@team.updated_at.days_ago
@team.days_ago
Date.today
Date.today - @team.updated_at
c
@teams.first
@teams.last
@teams.count
exit
@teams.count
c
@teams.count
exit
@teams.count
c
params[:school][:name]
params
c
params
@question
exit
@question
exit
puts page.body
putsputs page.body
c
puts page.body
exit
first_layer.where(:school => current_user.school)
current_user.verified
params[:whichParam]
params[:search]
params
first_layer
c
first_layer
first_layer.count
first_layer
first_layer.count
first_layer
first_layer.count
first_layer
first_layer.count
first_layer
first_layer.count
first_layer
first_layer.count
first_layer
first_layer.count
first_layer
c
first_layer.count
first_layer
c
first_layer.count
first_layer
c
first_layer.where(:school => current_user.school)
first_layer
current_user
exit
s1
s1.update(:school => @school)
s1 = new_teacher.sponsored_students.first
new_teacher.sponsored_students.count
new_teacher.sponsored_students
new_teacher
c
@teacher_1.school
@this_teacher.school
puts page.body
exit
@teacher_1
current_user
@school
@this_teacher
puts page.body
exit
exit'
action_name
@action_name
puts page.body
exit
puts page.body
exit
puts page.body
exit
puts page.body
exit
!params[:teacher][:"#{id}"]
!!params[:teacher][:"#{id}"]
!!params[:teacher][:"#{id}"] 
params[:teacher][:"#{id}"]
c
ver_val
c
ver_val
exit
params[:teacher][:"#{id}"]
params[:teacher][:#{id}]
id
params[:teacher]
exit
Teacher.find(teacher)
teacher
exit
params[:teacher]
params
exit
@unverified_teachers
exit
@school
this_school == @school
this_school = @last_teacher.school
@last_teacher
@school.teachers.count
@school.teachers
c
exit
@school.teachers
@school.teahcers
@school.teachers.where(:verified => 0)
@unverified_teachers
@last_teacher
c
params[:this_school_id]
params
c
@school
exit
params[:school][:name]
params[:name]
params
params[:mentor_id]
@school
c
@school.valid?
exit
params[:name]
params
@school.valid?
exit
params[:name]
School.new(school_params)
params
@school.errors
@school.valid?
c
@school
c
@school
exit
@school
c
@school
exit
params[:school][:mentor_id]
params[:school]
params
c
params
c
@teacher.id
@teacher
exit
@new_school
c
new_school.valid?
new_school
exit
params
new_school
exit
new_school
c
params[:teacher][:school_id] 
exit
params[:school].present?
params[:school].present
params
c
@teacher
exit
@teacher
c
params
c
params
c
params
c
params
c
params
c
params
exit
params
exit
params
exit
params
c
puts page.body
exit
puts page.body
c
params[:seminar_student][:is_move]
params[:is_move]
params
exit
SeminarStudent.first.seminar
SeminarStudent.last.seminar
SeminarStudent.last
Seminar.all.each do |slap| puts slap.id end
Seminar.count
