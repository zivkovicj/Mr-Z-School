exit
puts page.body
exit
@seminar.students.first
@os_1.objective
obj_stud_0_0
c
puts page.body
c
puts page.body
c
puts page.body
exit
@seminar.school
@seminar
@school
c
@school
c
@schoool
c
@school
c
params
c
puts page.body
exit
puts page.body
c
os.objective
os
@seminar.objective_seminars.count
exit
puts page.body
c
params
c
exit
@seminar.objective_seminars
@seminar
params
c
@os_0.objective
@os_0
exit
@os_0
exit
params
c
exit
esit
submenu[0]
submenu
group
exit
SeminarStudent.find_by(:seminar => @seminar, :user => stud)
ObjectiveStudent.find_by(:objective => obj, :user => stud)
ObjectiveSeminar.find_by(:objective => obj, :seminar => @seminar)
obj = team.objective
stud = team.consultant
@objective_50
@objective_40
team.objective
team.consultant
team.consultant.score_on(team.objective)
c
team.consultant.score_on(team.objective)
c
team.consultant.score_on(team.objective)
c
team.consultant.score_on(team.objective)
c
team.consultant.score_on(team.objective)
c
team.consultant.score_on(team.objective)
c
team.consultant.score_on(team.objective)
c
team.consultant.score_on(team.objective)
@seminar.consultantThreshold
team.consultant
exit
rbc_0_ss.reload
rbc_0_ss
requested_objective
c
@school
c
exit
@teacher
@teacher.school
@school
c
obj_stud
obj_stud.update_keys("dc", 2)
obj_stud.dc_keys
obj_stud.points_this_term
obj_stud.objective
obj_stud.objectuve
obj_stud.user
exit
this_obj_stud.user
this_obj_stud.reload
this_obj_stud.objective
this_obj_stud.obj
this_obj_stud
exit
@consultancy.all_consultants.each do |consult| puts consult.first_name end
@consultancy.teams.count
@consultancy.all_consultants.count
@consultancy.all_consultants
exit
@seminar.seminar_students.order(:last_consultant_day).map(:user)
@seminar.seminar_students.order(:last_consultant_day)
c
self
self.update(:last_consultant_day => new_date)
self
date_of_consultancy - self.pref_request.to_i.days
self.pref_request.to_i
self.pref_request
date_of_consultancy
exit
c
@scores
exit
@seminar.obj_studs_for_seminar.count
exit
@seminar.objectives.count
@seminar.students.count
@seminar.obj_studs_for_seminar
exit
@seminar.obj_studs_for_seminar.count
SeminarStudent.where(:user => @seminar.students).count
SeminarStudent.where(:user => @seminar.students)
SeminarStudent.count
Student.find(32914467)
@seminar.students.count
@seminar.obj_studs_for_seminar.pluck(:user_id, :objective_id, col_to_use)
@scores
@seminar.obj_studs_for_seminar.count
c
exit
@scores
student
c
stud_to_add
exit
@student_2
Student.find(stud_id)
@students.count
@students
@scores[stud_id]
stud_id
@scores
c
@scores
c
newest_sem_stud
c
newest_sem_stud
c
params[:consultancy_id]
params
c
params
exit
params[:consultancy_id]
params
c
params[:consultancy_id]
params
c
exit
params[:consultancy_id]
params
c
exit
params
prams
c
params
exit
params
exit
@consultancy
c
puts page.body
action_name
exit
puts page.body
c
exit
@commodity.save
@commodity.valid?
@commodity
c
params
exit
params[:commodity][:deliverable].to_s
params[:commodity][:deliverable]
params[:commodity]
exit
params[:commodity][:deliverable]
params[:commodity]
exit
params
c
params
@commodity
c
exit
params
exit
CommodityStudent.where(:commodity => self.commodities.deliverable, :user => self.students, :delivered => false)
CommodityStudent.where(:commodity => self.commodities.deliverable, :user => self.students).count
CommodityStudent.where(:commodity => self.commodities.deliverable, :user => self.students)
CommodityStudent.where(:commodity => self.commodities.deliverable).count
CommodityStudent.where(:commodity => self.commodities.deliverable)
self.commodities.deliverable
self
c
exit
CommodityStudent.where(:commodity => self.commodities.deliverable)
exit
@teacher.commodities_needing_delivered
@teacher
exit
@com_studs
c
@source
c
params
@commodity
@source
c
@source
c
Commodity.find_by(:name => "Game Time Ticket")
c
Commodity.find_by(:name => "Game Time Ticket")
exit
Commodity.find_by(:name => "Game Time Ticket")
c
@game_time_ticket
exit
@game_time_ticket
exit
@commodity
exit
params
c
puts page.body
exit
@commode
@com_quant
