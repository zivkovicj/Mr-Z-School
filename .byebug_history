c
question
exit
c
@quiz
c
@quiz
c
@quiz
exit
@quiz
c
@quiz
c
@quiz
c
@quiz
c
@quiz
c
@quiz
c
@quiz
c
@quiz
exit
c
@quiz
c
@quiz
c
objective_is_pretest(obj)
obj = @objective_10
!stud.one_unfinished(@objective_10)
stud.one_unfinished(@objective_10)
@objective_10 = Objective.find_by(:name => "percentages")
@objective_10
c
@quiz
c
@quiz
exit
seminar.objectives.select{|x| self.quizzes.where(:objective => x, :total_score => nil) } 
seminar.objectives.count
blap.count
seminar
seminr
blap
exit
self.quizzes.count
self.quizzes
self
exit
@student.quizzes.count
@student.quizzes
@student
@unfinished_quizzes
c
@quiz
next_riposte_num
c
@question.picture
c
@question.picture
c
@question.picture
c
@question.picture
c
@question.picture
c
@question.picture
c
@question.picture
c
@question.picture
c
@question.picture
c
exit
@student_1
puts page.body
exit
lab.questions.count
lab
exit
c
old_lab.questions.count
old_lab
lo
exit
old_lab.questions.count
lo
old_lab
c
Question.find(980190962)
blop
c
blop = @picture.questions.first
@picture
@picture.questions.first
@picture.questions.count
c
@admin_p.questions.first
exit
@admin_p
Picture.all[3]
Picture.all[2]
Picture.all[1]
Picture.first
quest.picture_id
quest.picture
quest = Question.where.not(:picture => nil).first
quest = Question.where.not(:picture => nil)
exit
Picture.find_by(980190962)
Picture.find_by(quest.picture_id.to_i)
Picture.find_by(quest.picture_id)
quest.pictures
quest.picture_id
quest.picture
quest = Question.where.not(:picture => nil).first
@admin_p
@admin_p.questions.first
@admin_q
Question.where.not(:picture => nil)
exit
@admin_q
Question.where.not(:picture => nil)
exit
Picture.all[3]
Question.where(:picture => Picture.all[3]).count
Question.where(:picture => Picture.all[3])
Question.where(:picture => Picture.all[2])
Question.where(:picture => Picture.all[1])
Question.where(:picture => Picture.all[0])
Question.where(:picture => @admin_p)
Question.count
Question.first
@admin_p
exit
@seminar
puts page.body
c
@seminar_1
c
exit
@label.pictures.count
@label.pictures
@label
exit
Picture.all[2].labels.include?(@label)
Picture.all[1].labels.include?(@label)
Picture.all[0].labels.include?(@label)
Picture.where(:label_ids => @label.id).count
Picture.where(:label => @label).count
Picture.where(:label => @label).cout
Picture.where(:label => @label)
Picture.first.labels.first
Picture.first.label
Picture.count
Picture.where(:label => @label).count
Picture.where(:label => @label)
@label.user
Question.where(:label => @label).count
Question.where(:label => @label)
@label.questions
@label.questions.count
@label.questions
@label
c
@label.questions.count
@label.questions.first.update(:label_id => 1)
@label.questions.count
@label.questions.first.update(:label_id => 1)
@label.questions.first
@label
c
puts page.body
c
@consultancy.teams
exit
c
@consultancy.users.count
@consultancy.users
exit
@consultancy.users.count
@consultancy.users
@consultancy.teams.count
@consultancy.teams
student
@consultancy
Team.count
c
Team.count
Team.last
Team.first
c
@seminar.consultancies.count
c
@seminar.consultancies.count
c
old_consult
exit
params[:label]
params
exit
@question.label
@question
c
checkery
c
@question
pic
checkery
c
@pictures
exit
local_assigns
c
local_assigns[:dex]
local_assigns
:dex
locals[:dex]
dex
exit
c
locals[:index]
locals
local
:index
index
c
index
c
@user_p
exit
@pictures
exit
@question
@question.label
puts page.body
exit
:index
index
locals
c
puts page.body
c
@new_question
exit
@new_question_2
c
@question
exit
@question
